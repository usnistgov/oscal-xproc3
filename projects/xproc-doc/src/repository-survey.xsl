<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:ox="http://csrc.nist.gov/ns/oscal-xproc3"
   xmlns="http://www.w3.org/1999/xhtml" exclude-result-prefixes="#all" expand-text="true" version="3.0">

   <!--
   Punchlist
   
   ToC/directory
   CSS
   - grid?
   -->


   <xsl:template match="/*">
      <html>
         <head>
            <xsl:call-template name="make-style"/>
            <xsl:call-template name="make-script"/>
         </head>
         <body>
            <!--<aside class="directory">
               <xsl:apply-templates select="//declare-step" mode="directory">
                  <xsl:sort select="@type"/>
               </xsl:apply-templates>
            </aside>-->
            <main>
               <xsl:call-template name="lede"/>
               <xsl:apply-templates/>
            </main>
         </body>
      </html>
   </xsl:template>

   
   <xsl:template match="dir">
      <section class="dir">
         <h3>{ @name }</h3>
         <xsl:apply-templates/>
      </section>
   </xsl:template>
   <xsl:template match="file">
      <section class="file">
         <h4>{ @path }</h4>
         <xsl:apply-templates/>
      </section>
   </xsl:template>
   
   
   <xsl:template match="declare-step">
      <section id="{ ox:step-name(.) }" class="step" open="open">
         <h5>
            <xsl:text>{ @type} </xsl:text>

         </h5>
         <!--<p>
            <xsl:apply-templates select="." mode="specification-link"/>
            <xsl:text> is defined in the </xsl:text>
            <b>{ @library }</b>
            <xsl:text> library. It is { if (@library='standard') then 'a required' else 'an optional' } step.</xsl:text>
         </p>-->

         <xsl:apply-templates/>
      </section>
   </xsl:template>

   <xsl:function name="ox:step-name" as="xs:string?">
      <xsl:param name="step" as="element(declare-step)"/>
      <xsl:sequence select="$step ! substring-after(@type, ':')"/>
   </xsl:function>

   <xsl:template match="declare-step/option | declare-step/input | declare-step/output | load | store | *[exists(@href)] | *[exists(@message)]">
      <xsl:variable name="jumps" select="starts-with(@href,'..') or matches(@href,'\{.*\}')"/>
      <div class="pdiv">
      <p class="{local-name()}{ @primary[.='true']/' primary' }{ @required[.='true']/' required' }{ ' jumps'[$jumps] }">
         <xsl:text>{ local-name() }</xsl:text>
         <xsl:for-each select="@*">
            <xsl:text> { local-name() }="</xsl:text>
            <code>{.}</code>
            <xsl:text>"</xsl:text>
         </xsl:for-each>
      </p>
      <xsl:apply-templates/>
      </div>
   </xsl:template>
   

   <xsl:template name="make-style" expand-text="false">
      <style xml:space="preserve">
section.dir, section.file { outline: thin solid black; padding: 0.6em; margin-top: 0.4em }
section.step { background-color: gainsboro; padding: 0.6em; border: thin outset black; border-bottom: medium solid black; margin-top: 0.4em; width: fit-content }
section *:first-child { margin-top: 0em }
section *:last-child { margin-bottom: 0em }
p.jumps { background-color: whitesmoke }
.pdiv { padding: 0.2em; padding-left: 0.8em; border-left: thin solid black; border-bottom: medium solid black; margin-top: 0.4em }
.pdiv:hover { background-color: ivory }
.pdiv p { margin: 0em }
         </style>
   </xsl:template>
   
   <xsl:template name="make-script" expand-text="false">
   <!--   <script>
         /* selects textarea#linkcopy and copies it to the system clipboard */
         function copyToClipboard(block) {
         window.getSelection().selectAllChildren(block);
         document.execCommand('copy');
         }
      </script>-->
   </xsl:template>
   
   <xsl:template name="lede">
      <h1>XProc 3.0 steps</h1>
      <section class="introduction">
         <p>This survey of XProc step declarations in this repository was generated by querying the specification documents.</p>
      </section>
   </xsl:template>
</xsl:stylesheet>
